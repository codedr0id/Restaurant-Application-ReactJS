{"version":3,"sources":["shared/baseUrl.js","components/LoadingComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["baseUrl","Loading","className","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","maxLength","len","val","length","CommentForm","toggleModal","bind","handleSubmit","state","isModalOpen","this","setState","values","rating","Fragment","Button","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Col","Label","htmlFor","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","color","Component","Header","toggleNav","handleLogin","isNavOpen","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","required","isNumber","isNaN","Number","validEmail","test","Contact","JSON","stringify","postFeedback","resetFeedbackForm","role","md","size","offset","checkbox","About","RenderLeaders","leaders","Media","tag","left","middle","object","body","heading","CardHeader","title","dispatch","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","errorMessage","json","addComment","catch","console","log","message","actions","reset","feedback","newFeedback","Object","assign","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19b39a67.chunk.js","sourcesContent":["export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\n\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n           <Card>\r\n               <Link to={`/menu/${dish.id}`} >\r\n                   <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                   <CardImgOverlay>\r\n                       <CardTitle>{dish.name}</CardTitle>\r\n                   </CardImgOverlay>\r\n               </Link>\r\n           </Card>\r\n       );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n          return (\r\n              <div className=\"container\">\r\n                  <div className=\"row\">\r\n                      <Breadcrumb>\r\n                          <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                          <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                      </Breadcrumb>\r\n                      <div className=\"col-12\">\r\n                          <h3>Menu</h3>\r\n                          <hr />\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                      {menu}\r\n                  </div>\r\n              </div>\r\n          );\r\n    }\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\nimport {Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Col, Label} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {Link} from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n  function RenderDish({dish}) {\r\n\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <FadeTransform in transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n        <Card>\r\n            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n            <CardBody>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n                <CardText>{dish.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n        </FadeTransform>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function RenderComments({comments, postComment, dishId}) {\r\n\r\n    if (comments != null) {\r\n      return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n          <h4>Comments</h4>\r\n          <ul className=\"list-unstyled\">\r\n            <Stagger in>\r\n                 {comments.map((comment) => {\r\n                     return (\r\n                         <Fade in>\r\n                           <li key={comment.id}>\r\n                             <p>{comment.comment}</p>\r\n                             <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                           </li>\r\n                         </Fade>\r\n                     );\r\n                 })}\r\n            </Stagger>\r\n          </ul>\r\n          <CommentForm dishId={dishId} postComment={postComment} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const DishDetail = (props) => {\r\n\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n              <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n              <BreadcrumbItem active=\"active\">{props.dish.name}</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n              <h3>{props.dish.name}</h3>\r\n              <hr/>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <RenderDish dish ={props.dish}/>\r\n            <RenderComments comments={props.comments}\r\n              postComment={props.postComment}\r\n              dishId={props.dish.id}\r\n              />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div></div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default DishDetail;\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nexport class CommentForm extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.toggleModal = this.toggleModal.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n      this.state = {\r\n        isModalOpen: false\r\n      }\r\n    }\r\n\r\n    toggleModal() {\r\n      this.setState({\r\n        isModalOpen: !this.state.isModalOpen\r\n      });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n          <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n          <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n            <ModalBody>\r\n              <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n               <Row className=\"form-group\">\r\n                   <Col>\r\n                       <Label htmlFor=\"rating\">Rating</Label>\r\n                       <Control.select model=\".rating\" name=\"rating\"\r\n                           className=\"form-control\">\r\n                           <option>1</option>\r\n                           <option>2</option>\r\n                           <option>3</option>\r\n                           <option>4</option>\r\n                           <option>5</option>\r\n                       </Control.select>\r\n                   </Col>\r\n               </Row>\r\n                <Row className=\"form-group\">\r\n                    <Col>\r\n                        <Label htmlFor=\"author\">Your Name</Label>\r\n                        <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                             placeholder=\"Your Name\"\r\n                             className=\"form-control\"\r\n                             validators={{\r\n                                minLength: minLength(3), maxLength: maxLength(15)\r\n                             }}\r\n                              />\r\n                         <Errors\r\n                             className=\"text-danger\"\r\n                             model=\".author\"\r\n                             show=\"touched\"\r\n                             messages={{\r\n                                 minLength: 'Must be greater than 2 characters',\r\n                                 maxLength: 'Must be 15 characters or less'\r\n                             }}\r\n                          />\r\n                    </Col>\r\n                 </Row>\r\n                  <Row className=\"form-group\">\r\n                      <Col>\r\n                          <Label htmlFor=\"comment\">Comment</Label>\r\n                          <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                              rows=\"6\"\r\n                              className=\"form-control\" />\r\n                      </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group\">\r\n                      <Col>\r\n                          <Button type=\"submit\" color=\"primary\">\r\n                            Submit\r\n                          </Button>\r\n                      </Col>\r\n                  </Row>\r\n              </LocalForm>\r\n            </ModalBody>\r\n          </Modal>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        }\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleLogin(event) {\r\n          this.toggleModal();\r\n          alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n              + \" Remember: \" + this.remember.checked);\r\n          event.preventDefault();\r\n\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n              <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img className=\"m-2\" src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                      <Form onSubmit={this.handleLogin}>\r\n                          <FormGroup>\r\n                              <Label htmlFor=\"username\">Username</Label>\r\n                              <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                  innerRef={(input) => this.username = input} />\r\n                          </FormGroup>\r\n                          <FormGroup>\r\n                              <Label htmlFor=\"password\">Password</Label>\r\n                              <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                  innerRef={(input) => this.password = input}  />\r\n                          </FormGroup>\r\n                          <FormGroup check>\r\n                              <Label check>\r\n                                  <Input type=\"checkbox\" name=\"remember\"\r\n                                  innerRef={(input) => this.remember = input}  />\r\n                                  Remember me\r\n                              </Label>\r\n                          </FormGroup>\r\n                          <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                      </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n              </React.Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                      <li><Link to='/home'>Home</Link></li>\r\n                      <li><Link to='/aboutus'>About Us</Link></li>\r\n                      <li><Link to='/menu'>Menu</Link></li>\r\n                      <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return <Loading />;\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else return (\r\n        <FadeTransform in transformProps={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                    <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n        );\r\n    }\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n                    <div className=\"row align-items-start\">\r\n                        <div className=\"col-12 col-md m-1\">\r\n                            <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md m-1\">\r\n                            <RenderCard item={props.promotion} isLoading={props.promosLoading} errMess={props.promosErrMess} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md m-1\">\r\n                            <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                );\r\n            }\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n      alert('Current State is: ' + JSON.stringify(values));\r\n      this.props.postFeedback(values);\r\n      this.props.resetFeedbackForm();\r\n  }\r\n\r\n  render() {\r\n\r\n    return(\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n              <Breadcrumb>\r\n                  <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                  <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n              </Breadcrumb>\r\n              <div className=\"col-12\">\r\n                  <h3>Contact Us</h3>\r\n                  <hr />\r\n              </div>\r\n          </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n               <div className=\"col-12\">\r\n                  <h3>Send us your Feedback</h3>\r\n               </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                  <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                         <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                         <Col md={10}>\r\n                             <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                 placeholder=\"First Name\"\r\n                                 className=\"form-control\"\r\n                                 validators={{\r\n                                     required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                 }}\r\n                                  />\r\n                             <Errors\r\n                                 className=\"text-danger\"\r\n                                 model=\".firstname\"\r\n                                 show=\"touched\"\r\n                                 messages={{\r\n                                     required: '** Required ** ',\r\n                                     minLength: 'Must be greater than 2 characters',\r\n                                     maxLength: 'Must be 15 characters or less'\r\n                                 }}\r\n                              />\r\n                         </Col>\r\n                     </Row>\r\n                     <Row className=\"form-group\">\r\n                         <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                         <Col md={10}>\r\n                             <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                 placeholder=\"Last Name\"\r\n                                 className=\"form-control\"\r\n                                 validators={{\r\n                                     required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                 }}\r\n                                  />\r\n                             <Errors\r\n                                 className=\"text-danger\"\r\n                                 model=\".lastname\"\r\n                                 show=\"touched\"\r\n                                 messages={{\r\n                                     required: '** Required ** ',\r\n                                     minLength: 'Must be greater than 2 characters',\r\n                                     maxLength: 'Must be 15 characters or less'\r\n                                 }}\r\n                              />\r\n                         </Col>\r\n                     </Row>\r\n                     <Row className=\"form-group\">\r\n                         <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                         <Col md={10}>\r\n                             <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                 placeholder=\"Tel. Number\"\r\n                                 className=\"form-control\"\r\n                                 validators={{\r\n                                     required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                 }}\r\n                                  />\r\n                             <Errors\r\n                                 className=\"text-danger\"\r\n                                 model=\".telnum\"\r\n                                 show=\"touched\"\r\n                                 messages={{\r\n                                     required: '** Required ** ',\r\n                                     minLength: 'Must be greater than 2 numbers',\r\n                                     maxLength: 'Must be 15 numbers or less',\r\n                                     isNumber: 'Must be a number'\r\n                                 }}\r\n                              />\r\n                         </Col>\r\n                     </Row>\r\n                     <Row className=\"form-group\">\r\n                         <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                         <Col md={10}>\r\n                             <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                 placeholder=\"Email\"\r\n                                 className=\"form-control\"\r\n                                 validators={{\r\n                                     required, validEmail\r\n                                 }}\r\n                                  />\r\n                             <Errors\r\n                                 className=\"text-danger\"\r\n                                 model=\".email\"\r\n                                 show=\"touched\"\r\n                                 messages={{\r\n                                     required: '** Required ** ',\r\n                                     validEmail: 'Invalid Email Address'\r\n                                 }}\r\n                              />\r\n                         </Col>\r\n                     </Row>\r\n                      <Row className=\"form-group\">\r\n                          <Col md={{size: 6, offset: 2}}>\r\n                              <div className=\"form-check\">\r\n                                  <Label check>\r\n                                      <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                          className=\"form-check-input\"\r\n                                           /> {' '}\r\n                                          <strong>May we contact you?</strong>\r\n                                  </Label>\r\n                              </div>\r\n                          </Col>\r\n                          <Col md={{size: 3, offset: 1}}>\r\n                              <Control.select model=\".contactType\" name=\"contactType\"\r\n                                  className=\"form-control\">\r\n                                  <option>Tel.</option>\r\n                                  <option>Email</option>\r\n                              </Control.select>\r\n                          </Col>\r\n                      </Row>\r\n                      <Row className=\"form-group\">\r\n                          <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                          <Col md={10}>\r\n                              <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                  rows=\"12\"\r\n                                  className=\"form-control\" />\r\n                          </Col>\r\n                      </Row>\r\n                      <Row className=\"form-group\">\r\n                          <Col md={{size:10, offset: 2}}>\r\n                              <Button type=\"submit\" color=\"primary\">\r\n                              Send Feedback\r\n                              </Button>\r\n                          </Col>\r\n                      </Row>\r\n                  </Form>\r\n                </div>\r\n           </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n    const leaders = props.leaders.leaders.map(leader => {\r\n\r\n        return (\r\n          <Stagger in>\r\n            <Fade in>\r\n          <Media tag=\"li\" key={leader.id} className=\"col-12 mt-5\" >\r\n              <Media left middle>\r\n                  <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n              </Media>\r\n              <Media body className=\"ml-5\">\r\n                  <Media heading>{leader.name}</Media>\r\n                  <p>{leader.designation}</p>\r\n                  <p>{leader.description}</p>\r\n              </Media>\r\n          </Media>\r\n        </Fade>\r\n        </Stagger>\r\n        );\r\n    });\r\n\r\n    // function RenderLeader({ leader }) {\r\n    //     return (\r\n    //             <Media tag=\"li\" key={leader.id} className=\"col-12 mt-5\" >\r\n    //                 <Media left middle>\r\n    //                     <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n    //                 </Media>\r\n    //                 <Media body className=\"ml-5\">\r\n    //                     <Media heading>{leader.name}</Media>\r\n    //                     <p>{leader.designation}</p>\r\n    //                     <p>{leader.description}</p>\r\n    //                 </Media>\r\n    //             </Media>\r\n    //     );\r\n    // }\r\n\r\n    function RenderLeaders() {\r\n\r\n        if (props.leaders.isLoading) {\r\n            return <Loading />;\r\n        }\r\n        else if (props.leaders.errMess) {\r\n            return (\r\n                <h4>{props.leaders.errMess}</h4>\r\n            );\r\n        }\r\n        else return (\r\n                <Stagger in>\r\n                  {props.leaders.leaders.map((leader) => {\r\n                      return (\r\n                          <Fade in>\r\n                            <Media tag=\"li\" key={leader.id} className=\"col-12 mt-5\" >\r\n                              <Media left middle>\r\n                                  <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                              </Media>\r\n                              <Media body className=\"ml-5\">\r\n                                  <Media heading>{leader.name}</Media>\r\n                                  <p>{leader.designation}</p>\r\n                                  <p>{leader.description}</p>\r\n                              </Media>\r\n                            </Media>\r\n                          </Fade>\r\n                      );\r\n                  })}\r\n                </Stagger>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <RenderLeaders />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment,\r\n    };\r\n\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('Post comments: ' + error.message);\r\n            alert('Comments could not be posted:\\n' + error.message)\r\n        })\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)))\r\n}\r\n\r\nexport const dishesLoading = () => (dispatch) => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)))\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)))\r\n}\r\n\r\nexport const promosLoading = () => (dispatch) => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)))\r\n}\r\n\r\nexport const leadersLoading = () => (dispatch) => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n    const newFeedback = Object.assign({ date: new Date().toISOString() }, feedback);\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .catch(error => {\r\n            console.log('Post feedback: ' + error.message);\r\n            alert('Feedback could not be posted:\\n' + error.message)\r\n        })\r\n};\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING ='PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED ='PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED ='LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\n","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\n\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n    fetchPromos: () => { dispatch(fetchPromos()) },\r\n    fetchComments: () => { dispatch(fetchComments()) },\r\n    fetchLeaders: () => { dispatch(fetchLeaders()) },\r\n    postFeedback: (feedback) => dispatch(postFeedback(feedback))\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return (\r\n                <Home dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter(promo => promo.featured)[0]}\r\n                    promosLoading={this.props.promotions.isLoading}\r\n                    promosErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter(leader => leader.featured)[0]}\r\n                    leadersLoading={this.props.leaders.isLoading}\r\n                    leadersErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail\r\n                    dish={this.props.dishes.dishes.filter(dish => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter(comment => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch>\r\n                            <Route path=\"/home\" component={HomePage} />\r\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                            <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                            <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null, dishes:[] }, action) => {\r\n      \r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, leaders: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './App.css';\r\nimport Main from './components/MainComponent';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div className=\"App\">\r\n            <Main />\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { createForms } from 'react-redux-form';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n      combineReducers({\r\n          dishes: Dishes,\r\n          comments: Comments,\r\n          promotions: Promotions,\r\n          leaders: Leaders,\r\n          ...createForms({\r\n              feedback: InitialFeedback\r\n          })\r\n      }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}